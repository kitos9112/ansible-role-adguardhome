# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

# Create `ansible` user with sudo permissions and membership in `DEPLOY_GROUP`
ENV ANSIBLE_USER=ansible SUDO_GROUP=wheel DEPLOY_GROUP=deployer
RUN set -xe \
    && groupadd -r ${ANSIBLE_USER} \
    && groupadd -r ${DEPLOY_GROUP} \
    && useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER} \
    && usermod -aG ${SUDO_GROUP} ${ANSIBLE_USER} \
    && usermod -aG ${DEPLOY_GROUP} ${ANSIBLE_USER} \
    && sed -i "/^%${SUDO_GROUP}/s/ALL\$/NOPASSWD:ALL/g" /etc/sudoers

RUN if [ $(command -v apt-get) ]; then \
    apt-get update && \
    apt-get install -y python3 python3-pip sudo bash ca-certificates \
    net-tools && \
    pip3 install --upgrade pip && \
    apt-get clean; \
    elif [ $(command -v dnf) ]; then \
    dnf makecache && \
    dnf --assumeyes install \
    sudo python3 python3-pip *python-devel python*-dnf bash \
    net-tools && \
    pip3 install --upgrade pip && \
    dnf clean all; \
    elif [ $(command -v yum) ]; then \
    yum makecache fast && \
    yum install -y epel-release && \
    yum update -y && \
    yum install -y python python-pip python-setuptools sudo \
    yum-plugin-ovl bash net-tools && \
    sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && \
    yum clean all; \
    elif [ $(command -v zypper) ]; then \
    zypper refresh && \
    zypper install -y python sudo bash python-xml && \
    zypper clean -a; \
    elif [ $(command -v apk) ]; then \
    apk update && \
    apk add --no-cache python sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then \
    xbps-install -Syu && \
    xbps-install -y python sudo bash ca-certificates && \
    xbps-remove -O; \
    fi

RUN if [ ! -e /sbin/init ]; then ln -s /lib/systemd/systemd /sbin/init; fi
